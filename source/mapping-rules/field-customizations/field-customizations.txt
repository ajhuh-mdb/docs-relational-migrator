.. _rm-field-customizations:

====================
Field Customizations
====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Field customizations are optional components of your mapping rules that 
allow you to convert your source relational column data types into a 
customized :ref:`BSON data types <bson-types>`. 

Relational Migrator assigns a default data type to your MongoDB fields 
that most closely matches the source column data type. Field customization 
gives you the ability to change the MongoDB field data type to fine-tune 
your schema.

Use Cases
---------

You can use field customization to:

- Change a source relational datatype to a specific MongoDB BSON datatype.
- Customize ``_id`` fields using JavaScript expressions.
- Configure null handling behavior.

Behavior
--------

Customized fields which cause errors during a sync job continue until
the user-defined maximum error threshold gets reached.

:guilabel:`Null Handlings` allow you to specify the behavior 
of ``Null`` values. You can omit these values or include 
them in your destination collections.

Customized fields support the following BSON data types:

- Boolean
- Date
- Decimal
- Double
- Integer
- Long
- String

.. warning::

   Some data type conversions may result in errors in your sync job. For
   details, see :ref:`conversion examples<rm-data-type-conversion-guide>`.

Get Started
-----------

- :ref:`mapping-rules-edit`

.. toctree::
   :titlesonly:
   :hidden:

   /mapping-rules/field-customizations/data-type-conversion-guide