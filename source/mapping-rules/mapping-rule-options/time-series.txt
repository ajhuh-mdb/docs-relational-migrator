.. _rm-timeseries:

==================================
Configure a Time Series Collection
==================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

You can configure mapping rules to migrate a table that contains a date 
time column as a :ref:`time series collection <manual-timeseries-collection>`. 
Time series collections efficiently store time series data. In time 
series collections, writes are organized so that data from the same 
source is stored alongside other data points from a similar point in time.

About this Task
---------------

Compared to normal collections, storing time series data in time series
collections improves query efficiency and reduces the disk usage for
time series data and :term:`secondary indexes <secondary index>`.

Before you Begin
----------------

For full details on each time series field component, see 
:ref:`time-series-fields`.

Steps
-----

.. procedure::
   :style:  connected

   .. step:: Select a collection with a date time field 

      a. Navigate to the :guilabel:`Mapping` screen.
      #. On the :guilabel:`Schema model` pane under the 
         :guilabel:`MongoDB` header, click on a collection that has a 
         date time field.

   .. step:: Configure the time series collection
     
      a. On the :guilabel:`Mappings` pane, click the :icon-lg:`Edit` 
         :guilabel:`Configure` button.
      #. Select the :guilabel:`Time Series Collection` radio button.
      #. Select a :guilabel:`Time Field`.
      #. (Optional) Select a :guilabel:`Meta Field`.
      #. Select a :guilabel:`Granularity`.
      #. (Optional) Select a :guilabel:`Expire After Seconds`.
      #. Click :guilabel:`Save And Close`.

         .. note::

            When a collection is configured with a time series field, 
            the time series icon :icon-lg:`TimeSeries` displays next to the collection
            name on the :guilabel:`Schema model` pane.

Example
-------

The following example converts the ``rental_date`` column into a time
series field in MongoDB:

.. tabs::

   .. tab:: Relational Input
      :tabid: new-document-in

      .. list-table::
         :header-rows: 1

         * - rental_id
           - rental_date
           - inventory_id
           - customer_id
           - return_date
           - staff_id
           - last_updated

         * - 1
           - 2005-05-24 22:53:30
           - 367
           - 130
           - 2005-05-26 22:04:30
           - 1
           - 2006-02-15 20:30:53


   .. tab:: MongoDB Output
      :tabid: Embedded-array-out

      .. code-block:: javascript
         :copyable: false

         {
         rental_date: {
            $date: "2005-05-24T22:53:30.000Z",
         },
         last_updated: "2006-02-16T01:30:53Z",
         customerId: 130,
         rental_date: {
            $date: "2005-05-26T22:04:30.000Z",
         },
         _id: {
            $oid: "661597470a883992d56d60d6",
         },
         inventory_id: 367,
         staff_id: 1,
         rental_id: 1,
         }

Learn More
----------

- :manual:`Time Series Best Practices </core/timeseries/timeseries-best-practices>`
- :ref:`Optimize Time Series Query Performance <tsc-best-practice-optimize-query-performance>`
- :ref:`timeseries-add-secondary-index`
- :ref:`time-series-fields`
