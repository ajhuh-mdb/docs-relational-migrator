.. _rm-convert-triggers:

================
Convert Triggers
================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

You can import and convert your SQL triggers to 
:ref:`MongoDB Atlas Triggers <atlas-triggers>` with the query converter. 
The query converter considers the SQL code and relational schema defined 
in your project when converting your triggers.

Before you Begin
----------------

Your relational database must have at least one trigger defined in order
to use query converter trigger conversion.

Steps
-----


.. procedure::
   :style:  connected

   .. step:: Navigate to the query converter pane

  	   From the :guilabel:`Code Generation` tab, click the :guilabel:`Query Converter` pane.

   .. step:: Open the query converter view

      -  If it is your first time using the query converter in your
         project, click :guilabel:`Import From Database`.

      -  If your project already has converted SQL code, click the
         :guilabel:`Manage Database Objects` button on the left-hand
         pane.

   .. step:: Select triggers

      a. On the :guilabel:`Import Database Objects` modal, click
         the :icon-fa5:`chevron-right` icon next to :guilabel:`Database`.

      #. Click the :icon-fa5:`chevron-right` icon next to your schema.

      #. Click the :icon-fa5:`chevron-right` icon next to
         :guilabel:`Triggers`.

         .. tip::

            You can toggle triggers for conversion by clicking
            the :icon-fa5:`check-square` icon next to a trigger's
            name. All triggers are selected by default.

      #. Click :guilabel:`Save`.

         The code for each trigger in your database 
         schema is imported into your project and is visible in the 
         :guilabel:`Query Converter` pane under 
         :guilabel:`Imported Trigger`.

   .. step:: Convert and test code

      a. Click a triggers's name from the left-hand pane under
         :guilabel:`Triggers`.
         
         The code displays in the 
         :guilabel:`Imported Trigger` pane.

         .. tip::

            .. include:: /includes/fact-query-converter-filter.rst

      #. Click the :guilabel:`Convert` button. Wait for the query 
         converter to convert your code. 

         The converted MongoDB code displays
         on the :guilabel:`Converted MongoDB Query` pane.

      #. Click the :icon-fa5:`copy` icon on the 
         :guilabel:`Converted MongoDB Query` pane to copy the MongoDB 
         code to your clipboard.

   .. step:: Test and validate the generated MongoDB code

         a. Login to your `Atlas account <https://cloud.mongodb.com/v2/>`__.

         #. From the :guilabel:`Overview` screen, click :guilabel:`Triggers`.

         #. Click :guilabel:`Add Trigger`.

         #. Select :guilabel:`Scheduled` for :guilabel:`Trigger Type`.

         #. Enter a name for the trigger in the :guilabel:`Name` text 
            field.

         #. Select the :guilabel:`Cluster Name`, the 
            :guilabel:`Database Name` and the 
            :guilabel:`Collection Name`.

         #. Select the :guilabel:`Operation Type` as 
            :guilabel:`Insert Document`.

         #. Toggle the :guilabel:`Document Preimage` and 
            :guilabel:`Full Document` switches to on.

         #. Enter the query converter code in the :guilabel:`Function`
            text field.

         #. Click :guilabel:`Run` to test the code.

         #. Click :guilabel:`Save` to save the Atlas trigger.

Example
-------

Optional.

In some cases, you can work through a specific example throughout the steps. 
In others, it is helpful to show a complete example at the end. In most cases, 
it's helpful to include an example of what a successful result looks like. It 
could be a brief description, code block, or screenshot. 


Convert a MySQL Trigger
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: sql
   :copyable: false

   CREATE TABLE PRODUCTS (
      PRODUCT_ID INT,  
      FULL_NAME varchar(200)
   );

.. code-block:: sql
   :copyable: false

   DELIMITER |
   CREATE TRIGGER TRIGGER_UPPER_PRODUCTS
      BEFORE INSERT ON PRODUCTS
      FOR EACH ROW
      SET NEW.FULL_NAME = UPPER(new.FULL_NAME)
   |
   DELIMITER ;

.. code-block:: sql
   :copyable: false

   INSERT INTO PRODUCTS VALUES(1,"mongodb");
   INSERT INTO PRODUCTS  VALUES(2,"atlas");
   INSERT INTO PRODUCTS  VALUES(3,"relational migrator");

.. code-block:: sql
   :copyable: false

   SELECT * FROM PRODUCTS;

Next Steps
----------

Optional.

Learn More
----------

TBD.
