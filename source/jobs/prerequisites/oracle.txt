.. _rm-prereq-oracle:

============================================
Configure Migration Prerequisites for Oracle
============================================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

When migrating data from an Oracle source database, the database may require 
configuration changes. If Relational Migrator determines the 
database needs configuration changes, it automatically generates a 
SQL script with the required changes. Have a Database Administrator (DBA)
review the script, then have them run the commands on the database server. 

Oracle configuration depends on the type of migration job:

.. include:: /includes/fact-short-sync-job-desc.rst

For details on supported versions of Oracle, see 
:ref:`supported-databases`.

About this Task
---------------

- If you're migrating from an Oracle 12c instance, you must run commands as 
  the SYSDBA role.
- Oracle 12c introduced the concept of a pluggable database. Some
  of these commands can be run on a PDB (pluggable database), while commands 
  such as enabling ``ARCHIVELOG`` must be run on the
  CDB (container/master database). For details on each architecture, 
  see `Overview of Container Databases and Pluggable Databases
  <https://oracle-base.com/articles/12c/multitenant-overview-container-database-cdb-12cr1>`__.
- Some commands differ based on whether the database is single or
  multi-tenant. In a multi-tenant database, permissions must
  include the suffix ``CONTAINER=ALL``
- Oracle Express editions don't support logging the necessary information for
  continuous migration jobs, so you can't run continuous migration against an
  Oracle XE database.

Steps
-----

.. tabs::

   .. tab:: Snapshot Jobs
      :tabid: enable-snapshot-jobs

      .. procedure::
         :style: normal

         .. step:: Set up user permissions

            .. include:: /includes/fact-data-prep-oracle-step1.rst

   .. tab:: Continuous Jobs
      :tabid: enable-continuous-jobs

      .. procedure::
         :style: normal

         .. step:: Set up user permissions

            .. include:: /includes/fact-data-prep-oracle-step1.rst

            d. Grant additional permissions to the service account 
               to run continuous migration jobs. 

               .. code-block:: sql
                  :copyable: true

                  GRANT SET CONTAINER TO <user>;
                  GRANT EXECUTE_CATALOG_ROLE TO <user>;
                  GRANT SELECT ANY TRANSACTION TO <user>;
                  GRANT LOGMINING TO <user>;
                  GRANT CREATE TABLE TO <user>;
                  GRANT LOCK ANY TABLE TO <user>;
                  GRANT CREATE SEQUENCE TO <user>;
                  GRANT SELECT ON DBA_TABLESPACES TO <user>; 
                  GRANT EXECUTE ON DBMS_LOGMNR TO <user>;
                  GRANT EXECUTE ON DBMS_LOGMNR_D TO <user>;
                  GRANT SELECT ON V$LOG TO <user>;
                  GRANT SELECT ON V$LOG_HISTORY TO <user>;
                  GRANT SELECT ON V$LOGMNR_LOGS TO <user>;
                  GRANT SELECT ON V$LOGMNR_CONTENTS TO <user>;
                  GRANT SELECT ON V$LOGMNR_PARAMETERS TO <user>;
                  GRANT SELECT ON V$LOGFILE TO <user>;
                  GRANT SELECT ON V$ARCHIVED_LOG TO <user>;
                  GRANT SELECT ON V$ARCHIVE_DEST_STATUS TO <user>;
                  GRANT SELECT ON V$TRANSACTION TO <user>;
                  GRANT SELECT ON V_$MYSTAT TO <user>;
                  GRANT SELECT ON V_$STATNAME TO <user>; 

         .. step:: Turn on archive logging
            
            a. To check if archive logging is already enabled, run the following query:

               .. code-block:: sql
                  :copyable: true

                  SELECT LOG_MODE FROM V$DATABASE;

               This outputs ``ARCHIVELOG`` if logging is enabled, or
               ``NOARCHIVELOG`` if it isn't.
            
            #. Enable archive logging if it isn't already enabled.
            
               The following is an example of the code Relational Migrator
               generates for enabling logging, which you can run manually by
               substituting your database name. If you're migrating a
               multi-tenant database, run these commands on the
               container/master database.

               .. code-block:: sql
                  :copyable: true

                  ALTER SYSTEM SET db_recovery_file_dest_size = 10G;
                  ALTER SYSTEM SET db_recovery_file_dest = '/opt/oracle/oradata/recovery_area' scope=spfile;
                  SHUTDOWN IMMEDIATE;
                  STARTUP MOUNT
                  ALTER DATABASE ARCHIVELOG;
                  ALTER DATABASE OPEN;
    
         .. step:: Enable supplemental logging

            a. To run continuous migration jobs against Oracle, enable 
               supplemental logging:

               .. code-block:: sql
                  :copyable: true

                  ALTER DATABASE ADD SUPPLEMENTAL LOG DATA; 

            #. You must also enable supplemental logging for every 
               table in the migration:

               .. code-block:: sql
                  :copyable: true

                  ALTER TABLE schemaName.tableName ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;
                  /* Additional ALTER TABLE STATEMENTS... */ 

Learn More
----------

- Relational Migrator relies on the open-source Debezium connector to 
  capture row-level changes. For more details, see `Debezium Oracle 
  <https://debezium.io/documentation/reference/stable/connectors/oracle.html#_preparing_the_databas>`__
- For details on enabling archive logging, see `Managing Archived Redo Logs 
  <https://docs.oracle.com/cd/B19306_01/server.102/b14231/archredo.htm>`__.
- For additional troubleshooting and debugging information, see the 
  `Debezium Oracle help blog post
  <https://debezium.io/blog/2022/09/30/debezium-oracle-series-part-1/#configure-oracle-users>`__.
