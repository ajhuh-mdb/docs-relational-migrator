.. _relational-migrator-getting-started:

===============
Getting Started
===============

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Before you Begin
----------------

Relational Migrator allows you to bring your relational workloads 
to MongoDB.

To get familiar with Relational Migrator capabilities, 
features, and use cases review the follow resources:

- :ref:`<supported-databases>`
- `Relation Migrator Learning Byte <https://learn.mongodb.com/courses/mongodb-relational-migrator>`__
- `Relational Migrator NYC.Local Product Demo <https://www.youtube.com/watch?v=-ND6_m397OM&ab_channel=MongoDB>`__
-  :ref:`<rm-migration-scenarios>`

Overview
--------

The following steps are a high level workflow of how you can use 
Relational Migrator to get your data into MongoDB. These steps do not 
cover all features or capabilities of the tool.

.. procedure::

   .. step:: Install

      :ref:`Install Relational Migrator <installation>`.

   .. step:: Create a Project

      :ref:`Create a project <rm-projects>`, you can connect your source
      and destination databases with the appropriate 
      :ref:`connection strings <rm-connection-strings>`.

   .. step:: Use Recommended Schema

      Create initial mapping rules by using 
      :ref:`rm-new-rules-from-mappings`. This feature automatically 
      creates mapping rules based on your relational schema.

   .. step:: Customize your mapping rules

      Add or update :ref:`mapping rules <rm-mapping-rules>` to create 
      the destination data model that best matches your 
      application needs.

   .. step:: Run a Sync Job

      Run a :ref:`sync job <rm-sync-jobs>`. Sync jobs are the 
      worker threads that move the data from relational tables to
      MongoDB collections. 

.. toctree::
   :titlesonly:
   :hidden:

   /getting-started/supported-databases
   /getting-started/migration-scenarios